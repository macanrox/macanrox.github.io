{"version":3,"sources":["components/Header/Header.js","data/projects.js","components/Main/Projects/Projects.js","components/Main/Contact/Contact.js","components/Main/Main.js","data/social-media-icons.js","components/Footer/Footer.js","components/App/App.js","serviceWorker.js","fontawesome.js","index.js"],"names":["Header","props","toggle","bind","state","isOpen","this","setState","className","Navbar","color","dark","expand","NavbarBrand","src","id","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","href","Component","projects","title","source","description","image","role","tech","otherTech","Projects","project","console","log","Card","CardImg","top","width","alt","CardBody","CardTitle","CardSubtitle","CardText","Contact","Form","action","method","FormText","FormGroup","Row","Col","Input","type","name","required","placeholder","value","Label","for","Button","icon","Main","proj","JSON","parse","stringify","map","item","index","key","e","renderProject","socialButtons","link","Footer","Container","fluid","socialButton","App","Boolean","window","location","hostname","match","library","add","fab","far","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8173fa36.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink } from 'reactstrap';\nimport './Header.css';\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"site-header\">\n        <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarBrand>\n            <img src=\"https://i.imgur.com/vfQbnuB.jpg\" id=\"profile-pic\"></img>\n            <span className=\"profile-info\">\n              <span id=\"name\">Bresia Prudente</span>\n              <div id=\"career-title\" className=\"text-muted\">Software Developer</div>\n            </span>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"#works\">Works</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#contact\">Contact</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","const projects = [\n  {\n    id: 0,\n    title: 'Motor Part Picker',\n    source: '#',\n    description:\n      'A website to find the best deal on motorcycle parts as well as sharing motorcycle builds with the community.',\n    image: 'images/mpp.jpg',\n    role: 'Junior Developer',\n    tech: [\n      'javascript-plain colored',\n      'react-original-wordmark colored',\n      'css3-plain-wordmark colored',\n      'sass-original colored',\n      'nodejs-plain colored',\n    ],\n    otherTech: ['Redux', 'Firebase'],\n  }\n];\n\nexport default projects;\n","import React, { Component } from 'react';\nimport {\n  Card,\n  CardImg,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  CardBody } from 'reactstrap';\nimport './Projects.css';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.title,\n      source: props.source,\n      description: props.description,\n      image: props.image,\n      role: props.role,\n      tech: props.tech,\n      otherTech: props.otherTech\n    }\n  }\n\n  render() {\n    const project = this.state;\n    console.log(project.image);\n\n    return (\n      <Card className=\"col-6 col-md-4 col-lg-3 mb-4\">\n        <CardImg top width=\"100%\" src={project.image} alt=\"\" />\n        <CardBody>\n          <CardTitle id=\"project-link\"><a href={project.source}>{project.title}</a></CardTitle>\n          <CardSubtitle className=\"text-muted\">{project.role}</CardSubtitle>\n          <CardText>\n            {project.description}\n            <br />\n            <br />\n            <span className=\"tech-dev-icons\">\n              <span className=\"text-muted\">built with</span>\n              <br />\n              <span id=\"dev-icons\">\n                {project.tech}\n              </span>\n              &nbsp;\n              <span id=\"no-dev-icons\">\n              {project.otherTech}\n              </span>\n            </span>\n          </CardText>\n        </CardBody>\n      </Card>\n    );\n  }\n\n}//end of class Projects\n\nexport default Projects;\n","import React from 'react';\nimport { \n  Row,\n  Col, \n  Button, \n  Form, \n  FormGroup, \n  Label, \n  Input, \n  FormText } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Contact.css';\n\nexport default function Contact () {\n  return (\n    <Form className=\"form-box\" action=\"https://formspree.io/bprudew@gmail.com\" method=\"POST\">\n      <FormText className=\"contact-description\">\n        Interested in working together? Fill out the form below with some info about your project and I will \n        get back to you as soon as I can. Please allow a couple of days for me to respond. Thank you!\n      </FormText>\n      <FormGroup className=\"contact-info\">\n        <Row className=\"textbox-row\">\n          <Col><Input type=\"text\" name=\"name\" id=\"contact-name\" required=\"required\" placeholder=\"Name\" /></Col>\n          <Col><Input type=\"email\" name=\"email\" required=\"required\" id=\"contact-email\" placeholder=\"Email\" /></Col>\n          <Input type=\"hidden\" name=\"_subject\" id=\"_subject\" value=\"Github Portfolio Contact Form\" />    \n        </Row>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"contact-form-message\">Message</Label>\n        <Input type=\"textarea\" name=\"text\" id=\"contact-message\" placeholder=\"Your message\" />\n      </FormGroup>\n      <Row>\n        <Col>\n          <Button><FontAwesomeIcon className=\"button-icon\" icon={[\"far\", \"paper-plane\"]} />Get in touch!</Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n","import React, { Component } from 'react';\nimport './Main.css';\nimport projects from '../../data/projects';\nimport Projects from './Projects/Projects';\nimport Contact from './Contact/Contact';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proj: JSON.parse(JSON.stringify(projects)),\n    }\n  }\n\n  renderProject(project) {\n    return project.map((item, index) => (\n      <Projects \n        key={index.id} \n        title={item.title}\n        source={item.source}\n        description={item.description}\n        image={item.image}\n        role={item.role}\n        tech={item.tech.map((e) => <span className={`devicon-${e}`}></span>)}\n        otherTech={item.otherTech.map((e) => <span>{`${e} `}</span>)}\n        />\n      )\n    )\n  }\n\n  render() {\n    const project = this.state.proj;\n\n    return (\n      <div className=\"site-content\">\n        <div className=\"works\">\n          <h2><a href=\"#works\">Works</a><hr /></h2>\n          <div className=\"project-group\">\n            <div className=\"row\">\n              {this.renderProject(project)}\n            </div>\n          </div>\n        </div>\n        <div className=\"contact-header\">\n          <h2 id=\"contact-me\"><a href=\"#contact\">Contact Me</a><hr /></h2>\n          <Contact />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","export const socialButtons = [\n\t{\n\t\tlink: \"#github\",\n\t\ttype: \"fab\",\n\t\tname: \"github-alt\",\n\t\ttitle: \"Github\"\n\t},\n\t{\n\t\tlink: \"#linkedin\",\n\t\ttype: \"fab\",\n\t\tname: \"linkedin-in\",\n\t\ttitle: \"Linkedin\"\n\t},\n\t{\n\t\tlink: \"#email\",\n\t\ttype: \"far\",\n\t\tname: \"envelope\",\n\t\ttitle: \"Email\"\n\t}\n];\n","import React from 'react';\nimport { Container } from 'reactstrap';\nimport './Footer.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { socialButtons } from '../../data/social-media-icons';\n\nexport default function Footer() {\n  return (\n    <Container fluid className='site-footer'>\n      <div id=\"social-media\" className=\"fa-2x\">\n        {socialButtons.map(socialButton => {\n          return <a href={socialButton.link}>\n          <FontAwesomeIcon \n            className=\"social-media-icons\" \n            key={socialButton.name} \n            icon={[`${socialButton.type}`, `${socialButton.name}`]} />\n          </a>;\n        })}\n      </div>\n      <div><span id=\"credit\">2018&nbsp;&nbsp;&nbsp;</span></div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\n\nconst App = () => (\n  <body className=\"site\">\n    <Header />\n    <Main />\n    <Footer />\n  </body>\n);\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// File for keeping the icons that are needed for the project\n\n// Import the library\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\n// Import the icons\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\n\n// Add the icons we want\nlibrary.add( \n    fab, \n    far \n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './fontawesome'; //file including fontawesome icons\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}